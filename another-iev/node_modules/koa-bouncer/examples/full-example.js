//
// This is an example of how you might actually use koa-bouncer in an
// application, complete with useful middleware
//

var m = require('multiline');
var koa = require('koa');

/////////////////////////////////////////////////

var app = koa();
var bouncer = require('../index');

// Middleware /////////////////////////////////////////

app.use(require('koa-body')())
app.use(bouncer.middleware());

// Custom handler for koa-bouncer validation errors
// This example will
app.use(function*(next) {
  try {
    yield next;
  } catch(ex) {
    if (ex instanceof bouncer.ValidationError) {
      // ex.message will be the validation error message like 'Username taken'
      // ex.key will be the param name like 'uname'
      this.body = 'Error in param ' + ex.key + ': ' + ex.message;
      this.response.redirect('back');
      return;
    }
    throw ex;
  }
});

app.use(require('koa-router')(app));

// Routes //////////////////////////////////////////////

var template = m(function() {/*
<form action="/test-1" method="post">
  username: <input type="text" name="username"><br>
  email:    <input type="email" name="email"><br>

  <button type="submit">Test 1</button>
</form>
*/});

app.get('/', function*() {
  this.body = template;
});

app.post('/test-1', function*() {
  this.validateBody('text')
    .notEmpty();
  this.body = this.request.body;
});

app.listen(3000);
console.log('Listening on 3000');
